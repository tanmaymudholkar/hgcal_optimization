//
// File generated by rootcint at Thu Apr 13 21:44:58 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void HGCSSInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSInfo(void *p = 0);
   static void *newArray_HGCSSInfo(Long_t size, void *p);
   static void delete_HGCSSInfo(void *p);
   static void deleteArray_HGCSSInfo(void *p);
   static void destruct_HGCSSInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSInfo*)
   {
      ::HGCSSInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSInfo", ::HGCSSInfo::Class_Version(), "./include/HGCSSInfo.hh", 9,
                  typeid(::HGCSSInfo), DefineBehavior(ptr, ptr),
                  &::HGCSSInfo::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSInfo) );
      instance.SetNew(&new_HGCSSInfo);
      instance.SetNewArray(&newArray_HGCSSInfo);
      instance.SetDelete(&delete_HGCSSInfo);
      instance.SetDeleteArray(&deleteArray_HGCSSInfo);
      instance.SetDestructor(&destruct_HGCSSInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSInfo*)
   {
      return GenerateInitInstanceLocal((::HGCSSInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSEvent(void *p = 0);
   static void *newArray_HGCSSEvent(Long_t size, void *p);
   static void delete_HGCSSEvent(void *p);
   static void deleteArray_HGCSSEvent(void *p);
   static void destruct_HGCSSEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSEvent*)
   {
      ::HGCSSEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSEvent", ::HGCSSEvent::Class_Version(), "./include/HGCSSEvent.hh", 9,
                  typeid(::HGCSSEvent), DefineBehavior(ptr, ptr),
                  &::HGCSSEvent::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSEvent) );
      instance.SetNew(&new_HGCSSEvent);
      instance.SetNewArray(&newArray_HGCSSEvent);
      instance.SetDelete(&delete_HGCSSEvent);
      instance.SetDeleteArray(&deleteArray_HGCSSEvent);
      instance.SetDestructor(&destruct_HGCSSEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSEvent*)
   {
      return GenerateInitInstanceLocal((::HGCSSEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSSamplingSection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSSamplingSection(void *p = 0);
   static void *newArray_HGCSSSamplingSection(Long_t size, void *p);
   static void delete_HGCSSSamplingSection(void *p);
   static void deleteArray_HGCSSSamplingSection(void *p);
   static void destruct_HGCSSSamplingSection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSSamplingSection*)
   {
      ::HGCSSSamplingSection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSSamplingSection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSSamplingSection", ::HGCSSSamplingSection::Class_Version(), "./include/HGCSSSamplingSection.hh", 9,
                  typeid(::HGCSSSamplingSection), DefineBehavior(ptr, ptr),
                  &::HGCSSSamplingSection::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSSamplingSection) );
      instance.SetNew(&new_HGCSSSamplingSection);
      instance.SetNewArray(&newArray_HGCSSSamplingSection);
      instance.SetDelete(&delete_HGCSSSamplingSection);
      instance.SetDeleteArray(&deleteArray_HGCSSSamplingSection);
      instance.SetDestructor(&destruct_HGCSSSamplingSection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSSamplingSection*)
   {
      return GenerateInitInstanceLocal((::HGCSSSamplingSection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSSamplingSection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSSimHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSSimHit(void *p = 0);
   static void *newArray_HGCSSSimHit(Long_t size, void *p);
   static void delete_HGCSSSimHit(void *p);
   static void deleteArray_HGCSSSimHit(void *p);
   static void destruct_HGCSSSimHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSSimHit*)
   {
      ::HGCSSSimHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSSimHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSSimHit", ::HGCSSSimHit::Class_Version(), "./include/HGCSSSimHit.hh", 24,
                  typeid(::HGCSSSimHit), DefineBehavior(ptr, ptr),
                  &::HGCSSSimHit::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSSimHit) );
      instance.SetNew(&new_HGCSSSimHit);
      instance.SetNewArray(&newArray_HGCSSSimHit);
      instance.SetDelete(&delete_HGCSSSimHit);
      instance.SetDeleteArray(&deleteArray_HGCSSSimHit);
      instance.SetDestructor(&destruct_HGCSSSimHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSSimHit*)
   {
      return GenerateInitInstanceLocal((::HGCSSSimHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSGenParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSGenParticle(void *p = 0);
   static void *newArray_HGCSSGenParticle(Long_t size, void *p);
   static void delete_HGCSSGenParticle(void *p);
   static void deleteArray_HGCSSGenParticle(void *p);
   static void destruct_HGCSSGenParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSGenParticle*)
   {
      ::HGCSSGenParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSGenParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSGenParticle", ::HGCSSGenParticle::Class_Version(), "./include/HGCSSGenParticle.hh", 12,
                  typeid(::HGCSSGenParticle), DefineBehavior(ptr, ptr),
                  &::HGCSSGenParticle::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSGenParticle) );
      instance.SetNew(&new_HGCSSGenParticle);
      instance.SetNewArray(&newArray_HGCSSGenParticle);
      instance.SetDelete(&delete_HGCSSGenParticle);
      instance.SetDeleteArray(&deleteArray_HGCSSGenParticle);
      instance.SetDestructor(&destruct_HGCSSGenParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSGenParticle*)
   {
      return GenerateInitInstanceLocal((::HGCSSGenParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSGenParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSRecoHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSRecoHit(void *p = 0);
   static void *newArray_HGCSSRecoHit(Long_t size, void *p);
   static void delete_HGCSSRecoHit(void *p);
   static void deleteArray_HGCSSRecoHit(void *p);
   static void destruct_HGCSSRecoHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSRecoHit*)
   {
      ::HGCSSRecoHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSRecoHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSRecoHit", ::HGCSSRecoHit::Class_Version(), "./include/HGCSSRecoHit.hh", 17,
                  typeid(::HGCSSRecoHit), DefineBehavior(ptr, ptr),
                  &::HGCSSRecoHit::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSRecoHit) );
      instance.SetNew(&new_HGCSSRecoHit);
      instance.SetNewArray(&newArray_HGCSSRecoHit);
      instance.SetDelete(&delete_HGCSSRecoHit);
      instance.SetDeleteArray(&deleteArray_HGCSSRecoHit);
      instance.SetDestructor(&destruct_HGCSSRecoHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSRecoHit*)
   {
      return GenerateInitInstanceLocal((::HGCSSRecoHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSRecoJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSRecoJet(void *p = 0);
   static void *newArray_HGCSSRecoJet(Long_t size, void *p);
   static void delete_HGCSSRecoJet(void *p);
   static void deleteArray_HGCSSRecoJet(void *p);
   static void destruct_HGCSSRecoJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSRecoJet*)
   {
      ::HGCSSRecoJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSRecoJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSRecoJet", ::HGCSSRecoJet::Class_Version(), "./include/HGCSSRecoJet.hh", 9,
                  typeid(::HGCSSRecoJet), DefineBehavior(ptr, ptr),
                  &::HGCSSRecoJet::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSRecoJet) );
      instance.SetNew(&new_HGCSSRecoJet);
      instance.SetNewArray(&newArray_HGCSSRecoJet);
      instance.SetDelete(&delete_HGCSSRecoJet);
      instance.SetDeleteArray(&deleteArray_HGCSSRecoJet);
      instance.SetDestructor(&destruct_HGCSSRecoJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSRecoJet*)
   {
      return GenerateInitInstanceLocal((::HGCSSRecoJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSRecoJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSCluster(void *p = 0);
   static void *newArray_HGCSSCluster(Long_t size, void *p);
   static void delete_HGCSSCluster(void *p);
   static void deleteArray_HGCSSCluster(void *p);
   static void destruct_HGCSSCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSCluster*)
   {
      ::HGCSSCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSCluster", ::HGCSSCluster::Class_Version(), "./include/HGCSSCluster.hh", 21,
                  typeid(::HGCSSCluster), DefineBehavior(ptr, ptr),
                  &::HGCSSCluster::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSCluster) );
      instance.SetNew(&new_HGCSSCluster);
      instance.SetNewArray(&newArray_HGCSSCluster);
      instance.SetDelete(&delete_HGCSSCluster);
      instance.SetDeleteArray(&deleteArray_HGCSSCluster);
      instance.SetDestructor(&destruct_HGCSSCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSCluster*)
   {
      return GenerateInitInstanceLocal((::HGCSSCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *HGCSSInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSInfo::Class_Name()
{
   return "HGCSSInfo";
}

//______________________________________________________________________________
const char *HGCSSInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSEvent::Class_Name()
{
   return "HGCSSEvent";
}

//______________________________________________________________________________
const char *HGCSSEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSSamplingSection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSSamplingSection::Class_Name()
{
   return "HGCSSSamplingSection";
}

//______________________________________________________________________________
const char *HGCSSSamplingSection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSamplingSection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSSamplingSection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSamplingSection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSSamplingSection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSamplingSection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSSamplingSection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSamplingSection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSSimHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSSimHit::Class_Name()
{
   return "HGCSSSimHit";
}

//______________________________________________________________________________
const char *HGCSSSimHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSSimHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSSimHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSSimHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSGenParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSGenParticle::Class_Name()
{
   return "HGCSSGenParticle";
}

//______________________________________________________________________________
const char *HGCSSGenParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSGenParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSGenParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSGenParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSGenParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSGenParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSGenParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSGenParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSRecoHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSRecoHit::Class_Name()
{
   return "HGCSSRecoHit";
}

//______________________________________________________________________________
const char *HGCSSRecoHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSRecoHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSRecoHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSRecoHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSRecoJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSRecoJet::Class_Name()
{
   return "HGCSSRecoJet";
}

//______________________________________________________________________________
const char *HGCSSRecoJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSRecoJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSRecoJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSRecoJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSCluster::Class_Name()
{
   return "HGCSSCluster";
}

//______________________________________________________________________________
const char *HGCSSCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void HGCSSInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSInfo::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSInfo.
      TClass *R__cl = ::HGCSSInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version_", &version_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "model_", &model_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellsize_", &cellsize_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calorSizeXY_", &calorSizeXY_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSInfo : new ::HGCSSInfo;
   }
   static void *newArray_HGCSSInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSInfo[nElements] : new ::HGCSSInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSInfo(void *p) {
      delete ((::HGCSSInfo*)p);
   }
   static void deleteArray_HGCSSInfo(void *p) {
      delete [] ((::HGCSSInfo*)p);
   }
   static void destruct_HGCSSInfo(void *p) {
      typedef ::HGCSSInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSInfo

//______________________________________________________________________________
void HGCSSEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSEvent::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSEvent.
      TClass *R__cl = ::HGCSSEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_", &event_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xvtx_", &xvtx_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yvtx_", &yvtx_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zvtx_", &zvtx_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSEvent : new ::HGCSSEvent;
   }
   static void *newArray_HGCSSEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSEvent[nElements] : new ::HGCSSEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSEvent(void *p) {
      delete ((::HGCSSEvent*)p);
   }
   static void deleteArray_HGCSSEvent(void *p) {
      delete [] ((::HGCSSEvent*)p);
   }
   static void destruct_HGCSSEvent(void *p) {
      typedef ::HGCSSEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSEvent

//______________________________________________________________________________
void HGCSSSamplingSection::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSSamplingSection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSSamplingSection::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSSamplingSection::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSSamplingSection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSSamplingSection.
      TClass *R__cl = ::HGCSSSamplingSection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volNb_", &volNb_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volX0trans_", &volX0trans_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "voldEdx_", &voldEdx_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volLambdatrans_", &volLambdatrans_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "measuredE_", &measuredE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "absorberE_", &absorberE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalE_", &totalE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gFrac_", &gFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFrac_", &eFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muFrac_", &muFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutronFrac_", &neutronFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadFrac_", &hadFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgTime_", &avgTime_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSiHits_", &nSiHits_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSSamplingSection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSamplingSection : new ::HGCSSSamplingSection;
   }
   static void *newArray_HGCSSSamplingSection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSamplingSection[nElements] : new ::HGCSSSamplingSection[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSSamplingSection(void *p) {
      delete ((::HGCSSSamplingSection*)p);
   }
   static void deleteArray_HGCSSSamplingSection(void *p) {
      delete [] ((::HGCSSSamplingSection*)p);
   }
   static void destruct_HGCSSSamplingSection(void *p) {
      typedef ::HGCSSSamplingSection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSSamplingSection

//______________________________________________________________________________
void HGCSSSimHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSSimHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSSimHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSSimHit::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSSimHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSSimHit.
      TClass *R__cl = ::HGCSSSimHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time_", &time_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos_", &zpos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_", &layer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellid_", &cellid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nGammas_", &nGammas_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nElectrons_", &nElectrons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMuons_", &nMuons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nNeutrons_", &nNeutrons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProtons_", &nProtons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHadrons_", &nHadrons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackIDMainParent_", &trackIDMainParent_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyMainParent_", &energyMainParent_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSSimHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSimHit : new ::HGCSSSimHit;
   }
   static void *newArray_HGCSSSimHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSimHit[nElements] : new ::HGCSSSimHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSSimHit(void *p) {
      delete ((::HGCSSSimHit*)p);
   }
   static void deleteArray_HGCSSSimHit(void *p) {
      delete [] ((::HGCSSSimHit*)p);
   }
   static void destruct_HGCSSSimHit(void *p) {
      typedef ::HGCSSSimHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSSimHit

//______________________________________________________________________________
void HGCSSGenParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSGenParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSGenParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSGenParticle::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSGenParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSGenParticle.
      TClass *R__cl = ::HGCSSGenParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time_", &time_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpos_", &xpos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypos_", &ypos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos_", &zpos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_", &mass_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px_", &px_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py_", &py_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz_", &pz_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgid_", &pdgid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge_", &charge_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID_", &trackID_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSGenParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSGenParticle : new ::HGCSSGenParticle;
   }
   static void *newArray_HGCSSGenParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSGenParticle[nElements] : new ::HGCSSGenParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSGenParticle(void *p) {
      delete ((::HGCSSGenParticle*)p);
   }
   static void deleteArray_HGCSSGenParticle(void *p) {
      delete [] ((::HGCSSGenParticle*)p);
   }
   static void destruct_HGCSSGenParticle(void *p) {
      typedef ::HGCSSGenParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSGenParticle

//______________________________________________________________________________
void HGCSSRecoHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSRecoHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSRecoHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSRecoHit::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSRecoHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSRecoHit.
      TClass *R__cl = ::HGCSSRecoHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcCounts_", &adcCounts_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpos_", &xpos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypos_", &ypos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos_", &zpos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_", &layer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellid_", &cellid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noiseFrac_", &noiseFrac_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time_", &time_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSRecoHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoHit : new ::HGCSSRecoHit;
   }
   static void *newArray_HGCSSRecoHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoHit[nElements] : new ::HGCSSRecoHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSRecoHit(void *p) {
      delete ((::HGCSSRecoHit*)p);
   }
   static void deleteArray_HGCSSRecoHit(void *p) {
      delete [] ((::HGCSSRecoHit*)p);
   }
   static void destruct_HGCSSRecoHit(void *p) {
      typedef ::HGCSSRecoHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSRecoHit

//______________________________________________________________________________
void HGCSSRecoJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSRecoJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSRecoJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSRecoJet::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSRecoJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSRecoJet.
      TClass *R__cl = ::HGCSSRecoJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px_", &px_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py_", &py_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz_", &pz_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nConstituents_", &nConstituents_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "area_", &area_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "area_error_", &area_error_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSRecoJet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoJet : new ::HGCSSRecoJet;
   }
   static void *newArray_HGCSSRecoJet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoJet[nElements] : new ::HGCSSRecoJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSRecoJet(void *p) {
      delete ((::HGCSSRecoJet*)p);
   }
   static void deleteArray_HGCSSRecoJet(void *p) {
      delete [] ((::HGCSSRecoJet*)p);
   }
   static void destruct_HGCSSRecoJet(void *p) {
      typedef ::HGCSSRecoJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSRecoJet

//______________________________________________________________________________
void HGCSSCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSCluster::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSCluster.
      TClass *R__cl = ::HGCSSCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_", (void*)&pos_);
      R__insp.InspectMember("ROOT::Math::XYZPoint", (void*)&pos_, "pos_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_", (void*)&dir_);
      R__insp.InspectMember("ROOT::Math::XYZVector", (void*)&dir_, "dir_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_", &layer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedPos_", (void*)&seedPos_);
      R__insp.InspectMember("ROOT::Math::XYZPoint", (void*)&seedPos_, "seedPos_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedE_", &seedE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_", &width_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "recHitMap_", (void*)&recHitMap_);
      R__insp.InspectMember("map<HGCSSRecoHit*,double>", (void*)&recHitMap_, "recHitMap_.", false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSCluster(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSCluster : new ::HGCSSCluster;
   }
   static void *newArray_HGCSSCluster(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSCluster[nElements] : new ::HGCSSCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSCluster(void *p) {
      delete ((::HGCSSCluster*)p);
   }
   static void deleteArray_HGCSSCluster(void *p) {
      delete [] ((::HGCSSCluster*)p);
   }
   static void destruct_HGCSSCluster(void *p) {
      typedef ::HGCSSCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSCluster

namespace ROOT {
   void maplEHGCSSRecoHitmUcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEHGCSSRecoHitmUcOdoublegR_Dictionary();
   static void *new_maplEHGCSSRecoHitmUcOdoublegR(void *p = 0);
   static void *newArray_maplEHGCSSRecoHitmUcOdoublegR(Long_t size, void *p);
   static void delete_maplEHGCSSRecoHitmUcOdoublegR(void *p);
   static void deleteArray_maplEHGCSSRecoHitmUcOdoublegR(void *p);
   static void destruct_maplEHGCSSRecoHitmUcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<HGCSSRecoHit*,double>*)
   {
      map<HGCSSRecoHit*,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<HGCSSRecoHit*,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<HGCSSRecoHit*,double>", -2, "prec_stl/map", 63,
                  typeid(map<HGCSSRecoHit*,double>), DefineBehavior(ptr, ptr),
                  0, &maplEHGCSSRecoHitmUcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<HGCSSRecoHit*,double>) );
      instance.SetNew(&new_maplEHGCSSRecoHitmUcOdoublegR);
      instance.SetNewArray(&newArray_maplEHGCSSRecoHitmUcOdoublegR);
      instance.SetDelete(&delete_maplEHGCSSRecoHitmUcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEHGCSSRecoHitmUcOdoublegR);
      instance.SetDestructor(&destruct_maplEHGCSSRecoHitmUcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<HGCSSRecoHit*,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<HGCSSRecoHit*,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEHGCSSRecoHitmUcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<HGCSSRecoHit*,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEHGCSSRecoHitmUcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<HGCSSRecoHit*,double> : new map<HGCSSRecoHit*,double>;
   }
   static void *newArray_maplEHGCSSRecoHitmUcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<HGCSSRecoHit*,double>[nElements] : new map<HGCSSRecoHit*,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEHGCSSRecoHitmUcOdoublegR(void *p) {
      delete ((map<HGCSSRecoHit*,double>*)p);
   }
   static void deleteArray_maplEHGCSSRecoHitmUcOdoublegR(void *p) {
      delete [] ((map<HGCSSRecoHit*,double>*)p);
   }
   static void destruct_maplEHGCSSRecoHitmUcOdoublegR(void *p) {
      typedef map<HGCSSRecoHit*,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<HGCSSRecoHit*,double>

namespace ROOT {
   void vectorlEHGCSSClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSClustergR_Dictionary();
   static void *new_vectorlEHGCSSClustergR(void *p = 0);
   static void *newArray_vectorlEHGCSSClustergR(Long_t size, void *p);
   static void delete_vectorlEHGCSSClustergR(void *p);
   static void deleteArray_vectorlEHGCSSClustergR(void *p);
   static void destruct_vectorlEHGCSSClustergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSCluster>*)
   {
      vector<HGCSSCluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSCluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSCluster>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSCluster>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSClustergR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSCluster>) );
      instance.SetNew(&new_vectorlEHGCSSClustergR);
      instance.SetNewArray(&newArray_vectorlEHGCSSClustergR);
      instance.SetDelete(&delete_vectorlEHGCSSClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSClustergR);
      instance.SetDestructor(&destruct_vectorlEHGCSSClustergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSCluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSCluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSClustergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSCluster>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSCluster> : new vector<HGCSSCluster>;
   }
   static void *newArray_vectorlEHGCSSClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSCluster>[nElements] : new vector<HGCSSCluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSClustergR(void *p) {
      delete ((vector<HGCSSCluster>*)p);
   }
   static void deleteArray_vectorlEHGCSSClustergR(void *p) {
      delete [] ((vector<HGCSSCluster>*)p);
   }
   static void destruct_vectorlEHGCSSClustergR(void *p) {
      typedef vector<HGCSSCluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSCluster>

namespace ROOT {
   void vectorlEHGCSSGenParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSGenParticlegR_Dictionary();
   static void *new_vectorlEHGCSSGenParticlegR(void *p = 0);
   static void *newArray_vectorlEHGCSSGenParticlegR(Long_t size, void *p);
   static void delete_vectorlEHGCSSGenParticlegR(void *p);
   static void deleteArray_vectorlEHGCSSGenParticlegR(void *p);
   static void destruct_vectorlEHGCSSGenParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSGenParticle>*)
   {
      vector<HGCSSGenParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSGenParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSGenParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSGenParticle>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSGenParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSGenParticle>) );
      instance.SetNew(&new_vectorlEHGCSSGenParticlegR);
      instance.SetNewArray(&newArray_vectorlEHGCSSGenParticlegR);
      instance.SetDelete(&delete_vectorlEHGCSSGenParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSGenParticlegR);
      instance.SetDestructor(&destruct_vectorlEHGCSSGenParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSGenParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSGenParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSGenParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSGenParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSGenParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSGenParticle> : new vector<HGCSSGenParticle>;
   }
   static void *newArray_vectorlEHGCSSGenParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSGenParticle>[nElements] : new vector<HGCSSGenParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSGenParticlegR(void *p) {
      delete ((vector<HGCSSGenParticle>*)p);
   }
   static void deleteArray_vectorlEHGCSSGenParticlegR(void *p) {
      delete [] ((vector<HGCSSGenParticle>*)p);
   }
   static void destruct_vectorlEHGCSSGenParticlegR(void *p) {
      typedef vector<HGCSSGenParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSGenParticle>

namespace ROOT {
   void vectorlEHGCSSRecoHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSRecoHitgR_Dictionary();
   static void *new_vectorlEHGCSSRecoHitgR(void *p = 0);
   static void *newArray_vectorlEHGCSSRecoHitgR(Long_t size, void *p);
   static void delete_vectorlEHGCSSRecoHitgR(void *p);
   static void deleteArray_vectorlEHGCSSRecoHitgR(void *p);
   static void destruct_vectorlEHGCSSRecoHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSRecoHit>*)
   {
      vector<HGCSSRecoHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSRecoHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSRecoHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSRecoHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSRecoHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSRecoHit>) );
      instance.SetNew(&new_vectorlEHGCSSRecoHitgR);
      instance.SetNewArray(&newArray_vectorlEHGCSSRecoHitgR);
      instance.SetDelete(&delete_vectorlEHGCSSRecoHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSRecoHitgR);
      instance.SetDestructor(&destruct_vectorlEHGCSSRecoHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSRecoHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSRecoHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSRecoHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSRecoHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSRecoHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoHit> : new vector<HGCSSRecoHit>;
   }
   static void *newArray_vectorlEHGCSSRecoHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoHit>[nElements] : new vector<HGCSSRecoHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSRecoHitgR(void *p) {
      delete ((vector<HGCSSRecoHit>*)p);
   }
   static void deleteArray_vectorlEHGCSSRecoHitgR(void *p) {
      delete [] ((vector<HGCSSRecoHit>*)p);
   }
   static void destruct_vectorlEHGCSSRecoHitgR(void *p) {
      typedef vector<HGCSSRecoHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSRecoHit>

namespace ROOT {
   void vectorlEHGCSSRecoJetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSRecoJetgR_Dictionary();
   static void *new_vectorlEHGCSSRecoJetgR(void *p = 0);
   static void *newArray_vectorlEHGCSSRecoJetgR(Long_t size, void *p);
   static void delete_vectorlEHGCSSRecoJetgR(void *p);
   static void deleteArray_vectorlEHGCSSRecoJetgR(void *p);
   static void destruct_vectorlEHGCSSRecoJetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSRecoJet>*)
   {
      vector<HGCSSRecoJet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSRecoJet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSRecoJet>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSRecoJet>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSRecoJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSRecoJet>) );
      instance.SetNew(&new_vectorlEHGCSSRecoJetgR);
      instance.SetNewArray(&newArray_vectorlEHGCSSRecoJetgR);
      instance.SetDelete(&delete_vectorlEHGCSSRecoJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSRecoJetgR);
      instance.SetDestructor(&destruct_vectorlEHGCSSRecoJetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSRecoJet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSRecoJet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSRecoJetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSRecoJet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSRecoJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoJet> : new vector<HGCSSRecoJet>;
   }
   static void *newArray_vectorlEHGCSSRecoJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoJet>[nElements] : new vector<HGCSSRecoJet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSRecoJetgR(void *p) {
      delete ((vector<HGCSSRecoJet>*)p);
   }
   static void deleteArray_vectorlEHGCSSRecoJetgR(void *p) {
      delete [] ((vector<HGCSSRecoJet>*)p);
   }
   static void destruct_vectorlEHGCSSRecoJetgR(void *p) {
      typedef vector<HGCSSRecoJet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSRecoJet>

namespace ROOT {
   void vectorlEHGCSSSamplingSectiongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSSamplingSectiongR_Dictionary();
   static void *new_vectorlEHGCSSSamplingSectiongR(void *p = 0);
   static void *newArray_vectorlEHGCSSSamplingSectiongR(Long_t size, void *p);
   static void delete_vectorlEHGCSSSamplingSectiongR(void *p);
   static void deleteArray_vectorlEHGCSSSamplingSectiongR(void *p);
   static void destruct_vectorlEHGCSSSamplingSectiongR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSSamplingSection>*)
   {
      vector<HGCSSSamplingSection> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSSamplingSection>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSSamplingSection>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSSamplingSection>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSSamplingSectiongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSSamplingSection>) );
      instance.SetNew(&new_vectorlEHGCSSSamplingSectiongR);
      instance.SetNewArray(&newArray_vectorlEHGCSSSamplingSectiongR);
      instance.SetDelete(&delete_vectorlEHGCSSSamplingSectiongR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSSamplingSectiongR);
      instance.SetDestructor(&destruct_vectorlEHGCSSSamplingSectiongR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSSamplingSection> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSSamplingSection>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSSamplingSectiongR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSSamplingSection>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSSamplingSectiongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSamplingSection> : new vector<HGCSSSamplingSection>;
   }
   static void *newArray_vectorlEHGCSSSamplingSectiongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSamplingSection>[nElements] : new vector<HGCSSSamplingSection>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSSamplingSectiongR(void *p) {
      delete ((vector<HGCSSSamplingSection>*)p);
   }
   static void deleteArray_vectorlEHGCSSSamplingSectiongR(void *p) {
      delete [] ((vector<HGCSSSamplingSection>*)p);
   }
   static void destruct_vectorlEHGCSSSamplingSectiongR(void *p) {
      typedef vector<HGCSSSamplingSection> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSSamplingSection>

namespace ROOT {
   void vectorlEHGCSSSimHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSSimHitgR_Dictionary();
   static void *new_vectorlEHGCSSSimHitgR(void *p = 0);
   static void *newArray_vectorlEHGCSSSimHitgR(Long_t size, void *p);
   static void delete_vectorlEHGCSSSimHitgR(void *p);
   static void deleteArray_vectorlEHGCSSSimHitgR(void *p);
   static void destruct_vectorlEHGCSSSimHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSSimHit>*)
   {
      vector<HGCSSSimHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSSimHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSSimHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSSimHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSSimHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSSimHit>) );
      instance.SetNew(&new_vectorlEHGCSSSimHitgR);
      instance.SetNewArray(&newArray_vectorlEHGCSSSimHitgR);
      instance.SetDelete(&delete_vectorlEHGCSSSimHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSSimHitgR);
      instance.SetDestructor(&destruct_vectorlEHGCSSSimHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSSimHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSSimHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSSimHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSSimHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSSimHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSimHit> : new vector<HGCSSSimHit>;
   }
   static void *newArray_vectorlEHGCSSSimHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSimHit>[nElements] : new vector<HGCSSSimHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSSimHitgR(void *p) {
      delete ((vector<HGCSSSimHit>*)p);
   }
   static void deleteArray_vectorlEHGCSSSimHitgR(void *p) {
      delete [] ((vector<HGCSSSimHit>*)p);
   }
   static void destruct_vectorlEHGCSSSimHitgR(void *p) {
      typedef vector<HGCSSSimHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSSimHit>

/********************************************************
* src/dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/HGCSSInfo.hh");
  G__add_compiledheader("include/HGCSSEvent.hh");
  G__add_compiledheader("include/HGCSSSamplingSection.hh");
  G__add_compiledheader("include/HGCSSSimHit.hh");
  G__add_compiledheader("include/HGCSSGenParticle.hh");
  G__add_compiledheader("include/HGCSSRecoHit.hh");
  G__add_compiledheader("include/HGCSSRecoJet.hh");
  G__add_compiledheader("include/HGCSSCluster.hh");
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HGCSSInfo */
static int G__dict_403_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSInfo[n];
     } else {
       p = new((void*) gvp) HGCSSInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSInfo;
     } else {
       p = new((void*) gvp) HGCSSInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->version(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGCSSInfo*) G__getstructoffset())->version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->model(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGCSSInfo*) G__getstructoffset())->model());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->cellSize(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSInfo*) G__getstructoffset())->cellSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->calorSizeXY(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSInfo*) G__getstructoffset())->calorSizeXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_403_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_403_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSInfo(*(HGCSSInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSInfo G__THGCSSInfo;
static int G__dict_403_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSInfo*) (soff+(sizeof(HGCSSInfo)*i)))->~G__THGCSSInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSInfo*) (soff))->~G__THGCSSInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_403_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSInfo* dest = (HGCSSInfo*) G__getstructoffset();
   *dest = *(HGCSSInfo*) libp->para[0].ref;
   const HGCSSInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSEvent */
static int G__dict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSEvent[n];
     } else {
       p = new((void*) gvp) HGCSSEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSEvent;
     } else {
       p = new((void*) gvp) HGCSSEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSEvent*) G__getstructoffset())->eventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->eventNumber((const unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSEvent*) G__getstructoffset())->vtx_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->vtx_x((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSEvent*) G__getstructoffset())->vtx_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->vtx_y((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSEvent*) G__getstructoffset())->vtx_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->vtx_z((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSEvent(*(HGCSSEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSEvent G__THGCSSEvent;
static int G__dict_404_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSEvent*) (soff+(sizeof(HGCSSEvent)*i)))->~G__THGCSSEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSEvent*) (soff))->~G__THGCSSEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_404_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSEvent* dest = (HGCSSEvent*) G__getstructoffset();
   *dest = *(HGCSSEvent*) libp->para[0].ref;
   const HGCSSEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSSamplingSection */
static int G__dict_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSamplingSection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSamplingSection[n];
     } else {
       p = new((void*) gvp) HGCSSSamplingSection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSamplingSection;
     } else {
       p = new((void*) gvp) HGCSSSamplingSection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSamplingSection*) G__getstructoffset())->volNb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->volX0trans());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->voldEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->volLambdatrans());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->measuredE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->absorberE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->totalE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->gFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->eFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->muFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->neutronFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->hadFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSamplingSection*) G__getstructoffset())->avgTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSamplingSection*) G__getstructoffset())->nSiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->volNb(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->volX0trans(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->voldEdx(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->volLambdatrans(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->measuredE(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->absorberE(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->totalE(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->gFrac(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->eFrac(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->muFrac(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->neutronFrac(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->hadFrac(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->avgTime(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->nSiHits(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSSamplingSection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSamplingSection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSSamplingSection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSSamplingSection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSSamplingSection*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSamplingSection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSamplingSection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSamplingSection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSamplingSection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSamplingSection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_405_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSSamplingSection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSSamplingSection(*(HGCSSSamplingSection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSSamplingSection G__THGCSSSamplingSection;
static int G__dict_405_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSSamplingSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSSamplingSection*) (soff+(sizeof(HGCSSSamplingSection)*i)))->~G__THGCSSSamplingSection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSSamplingSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSSamplingSection*) (soff))->~G__THGCSSSamplingSection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_405_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSamplingSection* dest = (HGCSSSamplingSection*) G__getstructoffset();
   *dest = *(HGCSSSamplingSection*) libp->para[0].ref;
   const HGCSSSamplingSection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > */
static int G__dict_407_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reference obj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->at((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_reference obj = ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->at((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator* pobj;
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator xobj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator* pobj;
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator xobj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator* pobj;
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator xobj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator* pobj;
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator xobj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->resize((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->resize((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]), *((HGCSSSamplingSection*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reference obj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->operator[]((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_reference obj = ((const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->operator[]((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >;
     } else {
       p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]), *(HGCSSSamplingSection*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]), *(HGCSSSamplingSection*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >(*(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >(*(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >& obj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->operator=(*(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->reserve((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSamplingSection& obj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSamplingSection& obj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->push_back(*(HGCSSSamplingSection*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->swap(*(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator* pobj;
         vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator xobj = ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->insert(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[0])), *(HGCSSSamplingSection*) libp->para[1].ref);
         pobj = new vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->insert(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->insert(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[0])), (vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type) G__int(libp->para[1])
, *(HGCSSSamplingSection*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->erase(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->erase(*((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_407_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > G__TvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR;
static int G__dict_407_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) (soff+(sizeof(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >)*i)))->~G__TvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*) (soff))->~G__TvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSSimHit */
static int G__dict_575_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit[n];
     } else {
       p = new((void*) gvp) HGCSSSimHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit;
     } else {
       p = new((void*) gvp) HGCSSSimHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit(
*(G4SiHit*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])
, (TH2Poly*) G__int(libp->para[2]), (const float) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) HGCSSSimHit(
*(G4SiHit*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])
, (TH2Poly*) G__int(libp->para[2]), (const float) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit(
*(G4SiHit*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])
, (TH2Poly*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HGCSSSimHit(
*(G4SiHit*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])
, (TH2Poly*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->calculateTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->layer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->silayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->setLayer(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->cellid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nGammas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nNeutrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nProtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nHadrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->numberOfParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->gFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->eFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->muFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->neutronFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->protonFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->hadFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->Add(*(G4SiHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const HGCSSSimHit*) G__getstructoffset())->get_xy((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const HGCSSSimHit*) G__getstructoffset())->get_xy((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref);
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::XYZPoint* pobj;
         const ROOT::Math::XYZPoint xobj = ((const HGCSSSimHit*) G__getstructoffset())->position((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
         pobj = new ROOT::Math::XYZPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->get_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->eta((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->theta((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->phi((const bool) G__int(libp->para[0]), *(HGCSSGeometryConversion*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->getGranularity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGCSSSimHit*) G__getstructoffset())->mainParentTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->mainParentEfrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSSimHit*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSSimHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSSimHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSSimHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSSimHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSimHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_575_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSimHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_575_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSSimHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSSimHit(*(HGCSSSimHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSSimHit G__THGCSSSimHit;
static int G__dict_575_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSSimHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSSimHit*) (soff+(sizeof(HGCSSSimHit)*i)))->~G__THGCSSSimHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSSimHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSSimHit*) (soff))->~G__THGCSSSimHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_575_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* dest = (HGCSSSimHit*) G__getstructoffset();
   *dest = *(HGCSSSimHit*) libp->para[0].ref;
   const HGCSSSimHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
static int G__dict_577_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->at((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference obj = ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->at((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->resize((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->resize((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *((HGCSSSimHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator[]((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference obj = ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator[]((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >;
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *(HGCSSSimHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *(HGCSSSimHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator=(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->reserve((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSimHit& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSimHit& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->push_back(*(HGCSSSimHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->swap(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *(HGCSSSimHit*) libp->para[1].ref);
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), (vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[1])
, *(HGCSSSimHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->erase(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->erase(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_577_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSSimHit,allocator<HGCSSSimHit> > G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR;
static int G__dict_577_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) (soff+(sizeof(vector<HGCSSSimHit,allocator<HGCSSSimHit> >)*i)))->~G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) (soff))->~G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSGenParticle */
static int G__dict_580_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSGenParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSGenParticle[n];
     } else {
       p = new((void*) gvp) HGCSSGenParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSGenParticle;
     } else {
       p = new((void*) gvp) HGCSSGenParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGCSSGenParticle*) G__getstructoffset())->pdgid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGCSSGenParticle*) G__getstructoffset())->trackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSGenParticle*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->setPosition(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->setMomentum(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->mass(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->time(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->pdgid(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->charge(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->trackID(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGCSSGenParticle*) G__getstructoffset())->isIncoming());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSGenParticle*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSGenParticle*) G__getstructoffset())->Print((const unsigned int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSGenParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSGenParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSGenParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSGenParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSGenParticle*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSGenParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSGenParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSGenParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSGenParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_580_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSGenParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_580_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSGenParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSGenParticle(*(HGCSSGenParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSGenParticle G__THGCSSGenParticle;
static int G__dict_580_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSGenParticle*) (soff+(sizeof(HGCSSGenParticle)*i)))->~G__THGCSSGenParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSGenParticle*) (soff))->~G__THGCSSGenParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_580_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSGenParticle* dest = (HGCSSGenParticle*) G__getstructoffset();
   *dest = *(HGCSSGenParticle*) libp->para[0].ref;
   const HGCSSGenParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > */
static int G__dict_582_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reference obj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->at((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_reference obj = ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->at((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator* pobj;
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator xobj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator* pobj;
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator xobj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator* pobj;
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator xobj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator* pobj;
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator xobj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->resize((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->resize((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]), *((HGCSSGenParticle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reference obj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->operator[]((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_reference obj = ((const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->operator[]((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >;
     } else {
       p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]), *(HGCSSGenParticle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]), *(HGCSSGenParticle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >(*(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >(*(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >& obj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->operator=(*(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->reserve((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSGenParticle& obj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSGenParticle& obj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->push_back(*(HGCSSGenParticle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->swap(*(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator* pobj;
         vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator xobj = ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->insert(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[0])), *(HGCSSGenParticle*) libp->para[1].ref);
         pobj = new vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->insert(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->insert(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[0])), (vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type) G__int(libp->para[1])
, *(HGCSSGenParticle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->erase(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->erase(*((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_582_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > G__TvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR;
static int G__dict_582_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) (soff+(sizeof(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >)*i)))->~G__TvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*) (soff))->~G__TvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSRecoHit */
static int G__dict_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit[n];
     } else {
       p = new((void*) gvp) HGCSSRecoHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit;
     } else {
       p = new((void*) gvp) HGCSSRecoHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGCSSRecoHit(
*(HGCSSSimHit*) libp->para[0].ref, (const bool) G__int(libp->para[1])
, *(HGCSSGeometryConversion*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) HGCSSRecoHit(
*(HGCSSSimHit*) libp->para[0].ref, (const bool) G__int(libp->para[1])
, *(HGCSSGeometryConversion*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::XYZPoint* pobj;
         const ROOT::Math::XYZPoint xobj = ((const HGCSSRecoHit*) G__getstructoffset())->position();
         pobj = new ROOT::Math::XYZPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->energy(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->time(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->x(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->y(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->z(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->adcCounts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->adcCounts(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->layer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->layer(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->cellid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->cellid(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->noiseFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->noiseFraction(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->Add(*(HGCSSSimHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->get_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSRecoHit*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSRecoHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSRecoHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSRecoHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSRecoHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_585_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_585_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSRecoHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSRecoHit(*(HGCSSRecoHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSRecoHit G__THGCSSRecoHit;
static int G__dict_585_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSRecoHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSRecoHit*) (soff+(sizeof(HGCSSRecoHit)*i)))->~G__THGCSSRecoHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSRecoHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSRecoHit*) (soff))->~G__THGCSSRecoHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_585_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* dest = (HGCSSRecoHit*) G__getstructoffset();
   *dest = *(HGCSSRecoHit*) libp->para[0].ref;
   const HGCSSRecoHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
static int G__dict_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->at((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference obj = ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->at((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->resize((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->resize((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *((HGCSSRecoHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference obj = ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >;
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *(HGCSSRecoHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *(HGCSSRecoHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator=(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->reserve((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoHit& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoHit& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->push_back(*(HGCSSRecoHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->swap(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *(HGCSSRecoHit*) libp->para[1].ref);
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[1])
, *(HGCSSRecoHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_587_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR;
static int G__dict_587_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) (soff+(sizeof(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >)*i)))->~G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) (soff))->~G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSRecoJet */
static int G__dict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoJet[n];
     } else {
       p = new((void*) gvp) HGCSSRecoJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoJet;
     } else {
       p = new((void*) gvp) HGCSSRecoJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGCSSRecoJet(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) HGCSSRecoJet(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->energy(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->area());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->area(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoJet*) G__getstructoffset())->area_error());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->area_error(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoJet*) G__getstructoffset())->nConstituents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->nConstituents((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSRecoJet*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSRecoJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSRecoJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSRecoJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSRecoJet*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_590_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_590_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSRecoJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSRecoJet(*(HGCSSRecoJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSRecoJet G__THGCSSRecoJet;
static int G__dict_590_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSRecoJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSRecoJet*) (soff+(sizeof(HGCSSRecoJet)*i)))->~G__THGCSSRecoJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSRecoJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSRecoJet*) (soff))->~G__THGCSSRecoJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_590_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoJet* dest = (HGCSSRecoJet*) G__getstructoffset();
   *dest = *(HGCSSRecoJet*) libp->para[0].ref;
   const HGCSSRecoJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > */
static int G__dict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reference obj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->at((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_reference obj = ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->at((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator* pobj;
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator xobj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator* pobj;
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator xobj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator* pobj;
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator xobj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator* pobj;
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator xobj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->resize((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->resize((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]), *((HGCSSRecoJet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reference obj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_reference obj = ((const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >;
     } else {
       p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]), *(HGCSSRecoJet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]), *(HGCSSRecoJet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >(*(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >(*(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >& obj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->operator=(*(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->reserve((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoJet& obj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoJet& obj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->push_back(*(HGCSSRecoJet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->swap(*(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator* pobj;
         vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator xobj = ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[0])), *(HGCSSRecoJet*) libp->para[1].ref);
         pobj = new vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[0])), (vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type) G__int(libp->para[1])
, *(HGCSSRecoJet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_592_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > G__TvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR;
static int G__dict_592_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) (soff+(sizeof(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >)*i)))->~G__TvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*) (soff))->~G__TvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSCluster */
static int G__dict_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSCluster[n];
     } else {
       p = new((void*) gvp) HGCSSCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSCluster;
     } else {
       p = new((void*) gvp) HGCSSCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGCSSCluster(*(HGCSSRecoHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGCSSCluster(*(HGCSSRecoHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->getSeedE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->getSeedEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->getSeedPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::XYZPoint* pobj;
         const ROOT::Math::XYZPoint xobj = ((const HGCSSCluster*) G__getstructoffset())->position();
         pobj = new ROOT::Math::XYZPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::XYZVector* pobj;
         const ROOT::Math::XYZVector xobj = ((const HGCSSCluster*) G__getstructoffset())->direction();
         pobj = new ROOT::Math::XYZVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::XYZPoint* pobj;
         const ROOT::Math::XYZPoint xobj = ((const HGCSSCluster*) G__getstructoffset())->seedPosition();
         pobj = new ROOT::Math::XYZPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSCluster*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setEnergy(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setSeedEnergy(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setPosition(*(ROOT::Math::XYZPoint*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setDirection(*(ROOT::Math::XYZVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSCluster*) G__getstructoffset())->layer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSCluster*) G__getstructoffset())->width());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setLayer(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->setSeed(*(ROOT::Math::XYZPoint*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->addRecHitFraction(*((pair<HGCSSRecoHit*,double>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<HGCSSRecoHit*,double>& obj = ((const HGCSSCluster*) G__getstructoffset())->recHitFractions();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSCluster*) G__getstructoffset())->nRecHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->calculatePosition();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->calculateDirection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSCluster*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_651_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_651_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSCluster(*(HGCSSCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSCluster G__THGCSSCluster;
static int G__dict_651_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSCluster*) (soff+(sizeof(HGCSSCluster)*i)))->~G__THGCSSCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSCluster*) (soff))->~G__THGCSSCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_651_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSCluster* dest = (HGCSSCluster*) G__getstructoffset();
   *dest = *(HGCSSCluster*) libp->para[0].ref;
   const HGCSSCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSCluster,allocator<HGCSSCluster> > */
static int G__dict_662_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSCluster,allocator<HGCSSCluster> >::reference obj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->at((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::const_reference obj = ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->at((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator* pobj;
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator xobj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator* pobj;
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator xobj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator* pobj;
         vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator xobj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator* pobj;
         vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator xobj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->resize((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->resize((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]), *((HGCSSCluster*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSCluster,allocator<HGCSSCluster> >::reference obj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->operator[]((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::const_reference obj = ((const vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->operator[]((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSCluster,allocator<HGCSSCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSCluster,allocator<HGCSSCluster> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSCluster,allocator<HGCSSCluster> >;
     } else {
       p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSCluster,allocator<HGCSSCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSCluster,allocator<HGCSSCluster> >((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]), *(HGCSSCluster*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]), *(HGCSSCluster*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSCluster,allocator<HGCSSCluster> >((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSCluster,allocator<HGCSSCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSCluster,allocator<HGCSSCluster> >(*(vector<HGCSSCluster,allocator<HGCSSCluster> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >(*(vector<HGCSSCluster,allocator<HGCSSCluster> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSCluster,allocator<HGCSSCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSCluster,allocator<HGCSSCluster> >(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSCluster,allocator<HGCSSCluster> >(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSCluster,allocator<HGCSSCluster> >& obj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->operator=(*(vector<HGCSSCluster,allocator<HGCSSCluster> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->reserve((vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSCluster& obj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSCluster& obj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->push_back(*(HGCSSCluster*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->swap(*(vector<HGCSSCluster,allocator<HGCSSCluster> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator* pobj;
         vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator xobj = ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->insert(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[0])), *(HGCSSCluster*) libp->para[1].ref);
         pobj = new vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->insert(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->insert(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[0])), (vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type) G__int(libp->para[1])
, *(HGCSSCluster*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->erase(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->erase(*((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_662_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSCluster,allocator<HGCSSCluster> > G__TvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR;
static int G__dict_662_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSCluster,allocator<HGCSSCluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) (soff+(sizeof(vector<HGCSSCluster,allocator<HGCSSCluster> >)*i)))->~G__TvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSCluster,allocator<HGCSSCluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSCluster,allocator<HGCSSCluster> >*) (soff))->~G__TvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HGCSSInfo */

/* HGCSSEvent */

/* HGCSSSamplingSection */

/* vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > */

/* HGCSSSimHit */

/* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */

/* HGCSSGenParticle */

/* vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > */

/* HGCSSRecoHit */

/* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */

/* HGCSSRecoJet */

/* vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > */

/* HGCSSCluster */

/* vector<HGCSSCluster,allocator<HGCSSCluster> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSSamplingSection>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<G4SiHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSSubDetector>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned>",117,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorEnum,unsigned>",117,G__get_linked_tagnum(&G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorEnum,unsigned int>",117,G__get_linked_tagnum(&G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorEnum,unsigned int,less<DetectorEnum> >",117,G__get_linked_tagnum(&G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::pair<double,double> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<double,double> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<double,double>,less<int> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned,MergeCells>",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,MergeCells>",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,MergeCells,less<unsigned int> >",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned,std::map<unsigned,MergeCells> >",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,map<unsigned int,MergeCells,less<unsigned int>,allocator<pair<const unsigned int,MergeCells> > > >",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,map<unsigned int,MergeCells,less<unsigned int>,allocator<pair<const unsigned int,MergeCells> > >,less<unsigned int> >",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned,double>",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSSimHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSGenParticle>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSRecoHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSRecoJet>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<HGCSSRecoHit*,double>",117,G__get_linked_tagnum(&G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<HGCSSRecoHit*,double,less<HGCSSRecoHit*> >",117,G__get_linked_tagnum(&G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSCluster>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSCluster),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSCluster),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSCluster),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSCluster),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSCluster),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HGCSSInfo */
static void G__setup_memvarHGCSSInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSInfo));
   { HGCSSInfo *p; p=(HGCSSInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"version_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"model_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cellsize_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calorSizeXY_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGCSSEvent */
static void G__setup_memvarHGCSSEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSEvent));
   { HGCSSEvent *p; p=(HGCSSEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"event_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"yvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGCSSSamplingSection */
static void G__setup_memvarHGCSSSamplingSection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection));
   { HGCSSSamplingSection *p; p=(HGCSSSamplingSection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"volNb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"volX0trans_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"voldEdx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"volLambdatrans_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"measuredE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"absorberE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"totalE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"muFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"neutronFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"hadFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"avgTime_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nSiHits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > */
static void G__setup_memvarvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   { vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > *p; p=(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSSimHit */
static void G__setup_memvarHGCSSSimHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   { HGCSSSimHit *p; p=(HGCSSSimHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"time_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zpos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"layer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"cellid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nGammas_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nElectrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nMuons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nNeutrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nProtons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nHadrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trackIDMainParent_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energyMainParent_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
static void G__setup_memvarvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   { vector<HGCSSSimHit,allocator<HGCSSSimHit> > *p; p=(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSGenParticle */
static void G__setup_memvarHGCSSGenParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle));
   { HGCSSGenParticle *p; p=(HGCSSGenParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"time_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xpos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ypos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zpos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mass_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"px_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"py_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pz_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pdgid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"charge_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trackID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > */
static void G__setup_memvarvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   { vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > *p; p=(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSRecoHit */
static void G__setup_memvarHGCSSRecoHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   { HGCSSRecoHit *p; p=(HGCSSRecoHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"adcCounts_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xpos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ypos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zpos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"layer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"cellid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"noiseFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"time_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
static void G__setup_memvarvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   { vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > *p; p=(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSRecoJet */
static void G__setup_memvarHGCSSRecoJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet));
   { HGCSSRecoJet *p; p=(HGCSSRecoJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"px_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"py_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pz_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nConstituents_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"area_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"area_error_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > */
static void G__setup_memvarvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   { vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > *p; p=(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSCluster */
static void G__setup_memvarHGCSSCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSCluster));
   { HGCSSCluster *p; p=(HGCSSCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),G__defined_typename("XYZPoint"),-1,4,"pos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),G__defined_typename("XYZVector"),-1,4,"dir_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"layer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),G__defined_typename("XYZPoint"),-1,4,"seedPos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"seedE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"width_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR),G__defined_typename("map<HGCSSRecoHit*,double>"),-1,4,"recHitMap_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSCluster,allocator<HGCSSCluster> > */
static void G__setup_memvarvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   { vector<HGCSSCluster,allocator<HGCSSCluster> > *p; p=(vector<HGCSSCluster,allocator<HGCSSCluster> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHGCSSInfo(void) {
   /* HGCSSInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSInfo));
   G__memfunc_setup("HGCSSInfo",772,G__dict_403_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("version",774,G__dict_403_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("version",774,G__dict_403_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("model",529,G__dict_403_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("model",529,G__dict_403_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellSize",827,G__dict_403_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellSize",827,G__dict_403_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorSizeXY",1117,G__dict_403_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorSizeXY",1117,G__dict_403_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_403_0_10, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_403_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_403_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_403_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_403_0_14, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_403_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_403_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_403_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_403_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_403_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_403_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_403_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSInfo", 772, G__dict_403_0_22, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSInfo), -1, 0, 1, 1, 1, 0, "u 'HGCSSInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSInfo", 898, G__dict_403_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_403_0_24, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSInfo), -1, 1, 1, 1, 1, 0, "u 'HGCSSInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSEvent(void) {
   /* HGCSSEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSEvent));
   G__memfunc_setup("HGCSSEvent",890,G__dict_404_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventNumber",1163,G__dict_404_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventNumber",1163,G__dict_404_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_x",569,G__dict_404_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_x",569,G__dict_404_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_y",570,G__dict_404_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_y",570,G__dict_404_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_z",571,G__dict_404_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtx_z",571,G__dict_404_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_404_0_10, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_404_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_404_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_404_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_404_0_14, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_404_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_404_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_404_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_404_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_404_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_404_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_404_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSEvent", 890, G__dict_404_0_22, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSEvent), -1, 0, 1, 1, 1, 0, "u 'HGCSSEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSEvent", 1016, G__dict_404_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_404_0_24, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSEvent), -1, 1, 1, 1, 1, 0, "u 'HGCSSEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSSamplingSection(void) {
   /* HGCSSSamplingSection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection));
   G__memfunc_setup("HGCSSSamplingSection",1928,G__dict_405_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volNb",513,G__dict_405_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volX0trans",1025,G__dict_405_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("voldEdx",726,G__dict_405_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volLambdatrans",1466,G__dict_405_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("measuredE",923,G__dict_405_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("absorberE",917,G__dict_405_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("totalE",617,G__dict_405_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gFrac",483,G__dict_405_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eFrac",481,G__dict_405_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muFrac",606,G__dict_405_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutronFrac",1159,G__dict_405_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadFrac",681,G__dict_405_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("avgTime",717,G__dict_405_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSiHits",706,G__dict_405_0_15, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volNb",513,G__dict_405_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volX0trans",1025,G__dict_405_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("voldEdx",726,G__dict_405_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("volLambdatrans",1466,G__dict_405_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("measuredE",923,G__dict_405_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("absorberE",917,G__dict_405_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("totalE",617,G__dict_405_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gFrac",483,G__dict_405_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eFrac",481,G__dict_405_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muFrac",606,G__dict_405_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutronFrac",1159,G__dict_405_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadFrac",681,G__dict_405_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("avgTime",717,G__dict_405_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSiHits",706,G__dict_405_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - aVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_405_0_30, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSSamplingSection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_405_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSamplingSection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_405_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSSamplingSection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_405_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSSamplingSection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_405_0_34, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_405_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_405_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_405_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_405_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSamplingSection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_405_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSamplingSection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_405_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSamplingSection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_405_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSamplingSection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSSamplingSection", 1928, G__dict_405_0_42, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), -1, 0, 1, 1, 1, 0, "u 'HGCSSSamplingSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSSamplingSection", 2054, G__dict_405_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_405_0_44, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), -1, 1, 1, 1, 1, 0, "u 'HGCSSSamplingSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR(void) {
   /* vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR));
   G__memfunc_setup("at",213,G__dict_407_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_407_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_407_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_407_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_407_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_407_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_407_0_7, 107, -1, G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_407_0_8, 107, -1, G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_407_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_407_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - sz u 'HGCSSSamplingSection' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_407_0_11, 107, -1, G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_407_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_407_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_407_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), G__defined_typename("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >",5796,G__dict_407_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >",5796,G__dict_407_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n u 'HGCSSSamplingSection' - 11 'HGCSSSamplingSection()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >",5796,G__dict_407_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >",5796,G__dict_407_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator' 10 - first u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_407_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_407_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_407_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_407_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSamplingSection), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_407_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSSamplingSection' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_407_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_407_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - position u 'HGCSSSamplingSection' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_407_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - position u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator' 10 - first "
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_407_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - position k - 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::size_type' 0 - n "
"u 'HGCSSSamplingSection' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_407_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_407_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_407_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - first u 'vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_407_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >", 5922, G__dict_407_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSSimHit(void) {
   /* HGCSSSimHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   G__memfunc_setup("HGCSSSimHit",966,G__dict_575_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSSimHit",966,G__dict_575_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 4, 1, 1, 0, 
"u 'G4SiHit' - 11 - aSiHit h - - 11 - asilayer "
"U 'TH2Poly' - 0 - map f - - 10 'CELL_SIZE_X' cellSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_575_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_575_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateTime",1341,G__dict_575_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_575_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("silayer",761,G__dict_575_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayer",841,G__dict_575_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 11 - layer h - - 11 - silayer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_575_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nGammas",708,G__dict_575_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nElectrons",1053,G__dict_575_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMuons",640,G__dict_575_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nNeutrons",972,G__dict_575_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nProtons",867,G__dict_575_0_14, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHadrons",829,G__dict_575_0_15, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfParticles",1765,G__dict_575_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gFrac",483,G__dict_575_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eFrac",481,G__dict_575_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muFrac",606,G__dict_575_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutronFrac",1159,G__dict_575_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("protonFrac",1054,G__dict_575_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadFrac",681,G__dict_575_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__dict_575_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'G4SiHit' - 11 - aSiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_xy",656,G__dict_575_0_24, 117, G__get_linked_tagnum(&G__dictLN_pairlEdoublecOdoublegR), -1, 0, 3, 1, 1, 8, 
"g - - 10 - radialMapToBeUsed u 'HGCSSGeometryConversion' - 11 - aGeom "
"h - - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__dict_575_0_25, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::XYZPoint"), 0, 3, 1, 1, 8, 
"g - - 10 - radialMapToBeUsed u 'HGCSSGeometryConversion' - 11 - aGeom "
"h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_z",537,G__dict_575_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_575_0_27, 100, -1, -1, 0, 2, 1, 1, 8, 
"g - - 10 - isScintillator u 'HGCSSGeometryConversion' - 11 - aGeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_575_0_28, 100, -1, -1, 0, 2, 1, 1, 8, 
"g - - 10 - isScintillator u 'HGCSSGeometryConversion' - 11 - aGeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_575_0_29, 100, -1, -1, 0, 2, 1, 1, 8, 
"g - - 10 - isScintillator u 'HGCSSGeometryConversion' - 11 - aGeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGranularity",1490,G__dict_575_0_30, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mainParentTrackID",1681,G__dict_575_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mainParentEfrac",1520,G__dict_575_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_575_0_33, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_575_0_34, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSSimHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_575_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_575_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSSimHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_575_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSSimHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_575_0_38, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_575_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_575_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_575_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_575_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_575_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSimHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_575_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_575_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSimHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSSimHit", 966, G__dict_575_0_46, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSSimHit", 1092, G__dict_575_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_575_0_48, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR(void) {
   /* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__memfunc_setup("at",213,G__dict_577_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_577_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_577_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_577_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_577_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_577_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_577_0_7, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_577_0_8, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_577_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_577_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - sz u 'HGCSSSimHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_577_0_11, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_577_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_577_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_577_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_577_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_577_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n u 'HGCSSSimHit' - 11 'HGCSSSimHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_577_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_577_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - first u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_577_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_577_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_577_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_577_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_577_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_577_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_577_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_577_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - first "
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_577_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n "
"u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_577_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_577_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_577_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - first u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_577_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSSimHit,allocator<HGCSSSimHit> >", 3998, G__dict_577_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSGenParticle(void) {
   /* HGCSSGenParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle));
   G__memfunc_setup("HGCSSGenParticle",1478,G__dict_580_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass",436,G__dict_580_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_580_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_580_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_580_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_580_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__dict_580_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__dict_580_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__dict_580_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdgid",520,G__dict_580_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__dict_580_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackID",674,G__dict_580_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__dict_580_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__dict_580_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__dict_580_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_580_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_580_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_580_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__dict_580_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 11 - x d - - 11 - y "
"d - - 11 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMomentum",1182,G__dict_580_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 11 - px d - - 11 - py "
"d - - 11 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass",436,G__dict_580_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_580_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdgid",520,G__dict_580_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__dict_580_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackID",674,G__dict_580_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isIncoming",1040,G__dict_580_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_580_0_27, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_580_0_28, 121, -1, -1, 0, 2, 1, 1, 8, 
"h - - 10 - - u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_580_0_29, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSGenParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_580_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSGenParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_580_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSGenParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_580_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSGenParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_580_0_33, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_580_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_580_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_580_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_580_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSGenParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_580_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSGenParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_580_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSGenParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_580_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSGenParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSGenParticle", 1478, G__dict_580_0_41, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), -1, 0, 1, 1, 1, 0, "u 'HGCSSGenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSGenParticle", 1604, G__dict_580_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_580_0_43, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), -1, 1, 1, 1, 1, 0, "u 'HGCSSGenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR(void) {
   /* vector<HGCSSGenParticle,allocator<HGCSSGenParticle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR));
   G__memfunc_setup("at",213,G__dict_582_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_582_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_582_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_582_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_582_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_582_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_582_0_7, 107, -1, G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_582_0_8, 107, -1, G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_582_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_582_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - sz u 'HGCSSGenParticle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_582_0_11, 107, -1, G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_582_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_582_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_582_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), G__defined_typename("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >",4896,G__dict_582_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >",4896,G__dict_582_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n u 'HGCSSGenParticle' - 11 'HGCSSGenParticle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >",4896,G__dict_582_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >",4896,G__dict_582_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator' 10 - first u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_582_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_582_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_582_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_582_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSGenParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_582_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSGenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_582_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_582_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - position u 'HGCSSGenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_582_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - position u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator' 10 - first "
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_582_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - position k - 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::size_type' 0 - n "
"u 'HGCSSGenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_582_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_582_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_582_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - first u 'vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_582_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >", 5022, G__dict_582_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSRecoHit(void) {
   /* HGCSSRecoHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   G__memfunc_setup("HGCSSRecoHit",1062,G__dict_585_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSRecoHit",1062,G__dict_585_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 3, 1, 1, 0, 
"u 'HGCSSSimHit' - 11 - aSimHit g - - 10 - isScintillator "
"u 'HGCSSGeometryConversion' - 11 - aGeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_585_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_585_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_585_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_585_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_585_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__dict_585_0_8, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::XYZPoint"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__dict_585_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__dict_585_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__dict_585_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__dict_585_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__dict_585_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_585_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_585_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_585_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_585_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_585_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adcCounts",932,G__dict_585_0_19, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adcCounts",932,G__dict_585_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - adcCounts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_585_0_21, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_585_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_585_0_23, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_585_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("noiseFraction",1364,G__dict_585_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("noiseFraction",1364,G__dict_585_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aFrac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__dict_585_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - aSimHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__dict_585_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__dict_585_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_z",537,G__dict_585_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_585_0_31, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_585_0_32, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSRecoHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_585_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_585_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSRecoHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_585_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSRecoHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_585_0_36, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_585_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_585_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_585_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_585_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_585_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_585_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_585_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSRecoHit", 1062, G__dict_585_0_44, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSRecoHit", 1188, G__dict_585_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_585_0_46, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR(void) {
   /* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__memfunc_setup("at",213,G__dict_587_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_587_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_587_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_587_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_587_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_587_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_587_0_7, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_587_0_8, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_587_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_587_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - sz u 'HGCSSRecoHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_587_0_11, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_587_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_587_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_587_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_587_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_587_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n u 'HGCSSRecoHit' - 11 'HGCSSRecoHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_587_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_587_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - first u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_587_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_587_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_587_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_587_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_587_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_587_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_587_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_587_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - first "
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_587_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n "
"u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_587_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_587_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_587_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - first u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_587_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >", 4190, G__dict_587_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSRecoJet(void) {
   /* HGCSSRecoJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet));
   G__memfunc_setup("HGCSSRecoJet",1060,G__dict_590_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSRecoJet",1060,G__dict_590_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 0, 4, 1, 1, 0, 
"d - - 11 - px d - - 11 - py "
"d - - 11 - pz d - - 11 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_590_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__dict_590_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_590_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__dict_590_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__dict_590_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__dict_590_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("area",409,G__dict_590_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("area",409,G__dict_590_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aArea", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("area_error",1058,G__dict_590_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("area_error",1058,G__dict_590_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aErr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nConstituents",1409,G__dict_590_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nConstituents",1409,G__dict_590_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_590_0_15, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_590_0_16, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSRecoJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_590_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_590_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSRecoJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_590_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSRecoJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_590_0_20, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_590_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_590_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_590_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_590_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_590_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_590_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_590_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoJet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSRecoJet", 1060, G__dict_590_0_28, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSRecoJet", 1186, G__dict_590_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_590_0_30, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 1, 1, 1, 1, 0, "u 'HGCSSRecoJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR(void) {
   /* vector<HGCSSRecoJet,allocator<HGCSSRecoJet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR));
   G__memfunc_setup("at",213,G__dict_592_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_592_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_592_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_592_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_592_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_592_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_592_0_7, 107, -1, G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_592_0_8, 107, -1, G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_592_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_592_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - sz u 'HGCSSRecoJet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_592_0_11, 107, -1, G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_592_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_592_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_592_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), G__defined_typename("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >",4060,G__dict_592_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >",4060,G__dict_592_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n u 'HGCSSRecoJet' - 11 'HGCSSRecoJet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >",4060,G__dict_592_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >",4060,G__dict_592_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator' 10 - first u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_592_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_592_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_592_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_592_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_592_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_592_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_592_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - position u 'HGCSSRecoJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_592_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - position u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator' 10 - first "
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_592_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - position k - 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::size_type' 0 - n "
"u 'HGCSSRecoJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_592_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_592_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_592_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - first u 'vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_592_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >", 4186, G__dict_592_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSCluster(void) {
   /* HGCSSCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSCluster));
   G__memfunc_setup("HGCSSCluster",1114,G__dict_651_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSCluster",1114,G__dict_651_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - aRecHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSeedE",774,G__dict_651_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSeedEta",987,G__dict_651_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSeedPhi",994,G__dict_651_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__dict_651_0_6, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::XYZPoint"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("direction",961,G__dict_651_0_7, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::XYZVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seedPosition",1270,G__dict_651_0_8, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::XYZPoint"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_651_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__dict_651_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__dict_651_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__dict_651_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__dict_651_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__dict_651_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeedEnergy",1335,G__dict_651_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__dict_651_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>' 'ROOT::Math::XYZPoint' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDirection",1261,G__dict_651_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>' 'ROOT::Math::XYZVector' 11 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_651_0_18, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("width",544,G__dict_651_0_19, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayer",841,G__dict_651_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeed",717,G__dict_651_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>' 'ROOT::Math::XYZPoint' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRecHitFraction",1694,G__dict_651_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<HGCSSRecoHit*,double>' - 0 - aHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recHitFractions",1544,G__dict_651_0_23, 117, G__get_linked_tagnum(&G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR), G__defined_typename("map<HGCSSRecoHit*,double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nRecHits",800,G__dict_651_0_24, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculatePosition",1795,G__dict_651_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateDirection",1871,G__dict_651_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_651_0_27, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_651_0_28, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_651_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_651_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_651_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_651_0_32, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_651_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_651_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_651_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_651_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_651_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_651_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_651_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSCluster", 1114, G__dict_651_0_40, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 0, 1, 1, 1, 0, "u 'HGCSSCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSCluster", 1240, G__dict_651_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_651_0_42, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 1, 1, 1, 1, 0, "u 'HGCSSCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR(void) {
   /* vector<HGCSSCluster,allocator<HGCSSCluster> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR));
   G__memfunc_setup("at",213,G__dict_662_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_662_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_662_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_662_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_662_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_662_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_662_0_7, 107, -1, G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_662_0_8, 107, -1, G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_662_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_662_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - sz u 'HGCSSCluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_662_0_11, 107, -1, G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_662_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_662_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_662_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), G__defined_typename("vector<HGCSSCluster,allocator<HGCSSCluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSCluster,allocator<HGCSSCluster> >",4168,G__dict_662_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSCluster,allocator<HGCSSCluster> >",4168,G__dict_662_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n u 'HGCSSCluster' - 11 'HGCSSCluster()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSCluster,allocator<HGCSSCluster> >",4168,G__dict_662_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSCluster,allocator<HGCSSCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSCluster,allocator<HGCSSCluster> >",4168,G__dict_662_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' 'vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator' 10 - first u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' 'vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_662_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSCluster,allocator<HGCSSCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_662_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_662_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_662_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_662_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_662_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSCluster,allocator<HGCSSCluster> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_662_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - position u 'HGCSSCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_662_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - position u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' 'vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator' 10 - first "
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' 'vector<HGCSSCluster,allocator<HGCSSCluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_662_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - position k - 'vector<HGCSSCluster,allocator<HGCSSCluster> >::size_type' 0 - n "
"u 'HGCSSCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_662_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_662_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_662_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - first u 'vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_662_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSCluster,allocator<HGCSSCluster> >", 4294, G__dict_662_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__dictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__dictLN_HGCSSInfo = { "HGCSSInfo" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSEvent = { "HGCSSEvent" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSSamplingSection = { "HGCSSSamplingSection" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR = { "vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator = { "vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_G4SiHit = { "G4SiHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR = { "vector<G4SiHit,allocator<G4SiHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<G4SiHit,allocator<G4SiHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__dictLN_TH2Poly = { "TH2Poly" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR = { "vector<HGCSSSubDetector,allocator<HGCSSSubDetector> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSSubDetector,allocator<HGCSSSubDetector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR = { "map<DetectorEnum,unsigned int,less<DetectorEnum>,allocator<pair<const DetectorEnum,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSGeometryConversion = { "HGCSSGeometryConversion" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<int,pair<double,double>,less<int>,allocator<pair<const int,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR = { "map<unsigned int,MergeCells,less<unsigned int>,allocator<pair<const unsigned int,MergeCells> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR = { "map<unsigned int,map<unsigned int,MergeCells,less<unsigned int>,allocator<pair<const unsigned int,MergeCells> > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,MergeCells,less<unsigned int>,allocator<pair<const unsigned int,MergeCells> > > > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSSimHit = { "HGCSSSimHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR = { "vector<HGCSSSimHit,allocator<HGCSSSimHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator = { "vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSGenParticle = { "HGCSSGenParticle" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR = { "vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator = { "vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSRecoHit = { "HGCSSRecoHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR = { "vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator = { "vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSRecoJet = { "HGCSSRecoJet" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR = { "vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator = { "vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSCluster = { "HGCSSCluster" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEHGCSSRecoHitmUcOdoublegR = { "pair<HGCSSRecoHit*,double>" , 115 , -1 };
G__linked_taginfo G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR = { "map<HGCSSRecoHit*,double,less<HGCSSRecoHit*>,allocator<pair<HGCSSRecoHit* const,double> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR = { "vector<HGCSSCluster,allocator<HGCSSCluster> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator = { "vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSCluster,allocator<HGCSSCluster> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_TClass.tagnum = -1 ;
  G__dictLN_TBuffer.tagnum = -1 ;
  G__dictLN_TMemberInspector.tagnum = -1 ;
  G__dictLN_ROOT.tagnum = -1 ;
  G__dictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__dictLN_HGCSSInfo.tagnum = -1 ;
  G__dictLN_HGCSSEvent.tagnum = -1 ;
  G__dictLN_HGCSSSamplingSection.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_G4SiHit.tagnum = -1 ;
  G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__dictLN_TH2Poly.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_HGCSSGeometryConversion.tagnum = -1 ;
  G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMath.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_HGCSSSimHit.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_HGCSSGenParticle.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_HGCSSRecoHit.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_HGCSSRecoJet.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__dictLN_HGCSSCluster.tagnum = -1 ;
  G__dictLN_pairlEHGCSSRecoHitmUcOdoublegR.tagnum = -1 ;
  G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOT);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSInfo),sizeof(HGCSSInfo),-1,263424,(char*)NULL,G__setup_memvarHGCSSInfo,G__setup_memfuncHGCSSInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSEvent),sizeof(HGCSSEvent),-1,263424,(char*)NULL,G__setup_memvarHGCSSEvent,G__setup_memfuncHGCSSEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSSamplingSection),sizeof(HGCSSSamplingSection),-1,263424,(char*)NULL,G__setup_memvarHGCSSSamplingSection,G__setup_memfuncHGCSSSamplingSection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR),sizeof(vector<HGCSSSamplingSection,allocator<HGCSSSamplingSection> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR,G__setup_memfuncvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSamplingSectioncOallocatorlEHGCSSSamplingSectiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_G4SiHit);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TH2Poly);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSubDetectorcOallocatorlEHGCSSSubDetectorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEDetectorEnumcOunsignedsPintcOlesslEDetectorEnumgRcOallocatorlEpairlEconstsPDetectorEnumcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_HGCSSGeometryConversion);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOpairlEdoublecOdoublegRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOMergeCellscOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOMergeCellsgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSSimHit),sizeof(HGCSSSimHit),-1,296192,(char*)NULL,G__setup_memvarHGCSSSimHit,G__setup_memfuncHGCSSSimHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR),sizeof(vector<HGCSSSimHit,allocator<HGCSSSimHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR,G__setup_memfuncvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSGenParticle),sizeof(HGCSSGenParticle),-1,263424,(char*)NULL,G__setup_memvarHGCSSGenParticle,G__setup_memfuncHGCSSGenParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR),sizeof(vector<HGCSSGenParticle,allocator<HGCSSGenParticle> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR,G__setup_memfuncvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSGenParticlecOallocatorlEHGCSSGenParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSRecoHit),sizeof(HGCSSRecoHit),-1,296192,(char*)NULL,G__setup_memvarHGCSSRecoHit,G__setup_memfuncHGCSSRecoHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR),sizeof(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR,G__setup_memfuncvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSRecoJet),sizeof(HGCSSRecoJet),-1,296192,(char*)NULL,G__setup_memvarHGCSSRecoJet,G__setup_memfuncHGCSSRecoJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR),sizeof(vector<HGCSSRecoJet,allocator<HGCSSRecoJet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR,G__setup_memfuncvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoJetcOallocatorlEHGCSSRecoJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSCluster),sizeof(HGCSSCluster),-1,296192,(char*)NULL,G__setup_memvarHGCSSCluster,G__setup_memfuncHGCSSCluster);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEHGCSSRecoHitmUcOdoublegR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEHGCSSRecoHitmUcOdoublecOlesslEHGCSSRecoHitmUgRcOallocatorlEpairlEHGCSSRecoHitmUsPconstcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR),sizeof(vector<HGCSSCluster,allocator<HGCSSCluster> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR,G__setup_memfuncvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSClustercOallocatorlEHGCSSClustergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

